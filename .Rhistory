ventas <- c(120,100,80)
objetivos <- c(TRUE,FALSE,TRUE)
datos <- data.frame(meses,ventas,objetivos)
subset(datos,subset = ventas <= 100)
factor(iris)
summary(factor(iris))
summary(factor(iris$Species))
summary(iris)
summary(sd(iris$Species = 'setosa'))
factor(sd(iris$Species = 'setosa'))
sd(iris$Species = 'setosa')
sd(iris$Sepal.Length)
sd(iris$Sepal.Length,iris$Species=''setosa)
sd(iris$Sepal.Length,iris$Species='setosa')
sd(iris$Sepal.Length,iris$Species='setosa')
sd(iris$Sepal.Length,iris$Species='setosa')
sd(iris$Sepal.Length,iris$Species='setosa')
sd(iris$Sepal.Length,iris$Species=='setosa')
sd(iris$Sepal.Length,iris$Species=='setosa')
sd(iris$Sepal.Length,iris$Species=='setosa')
sd(iris$Sepal.Length,iris$Species=='setosa')
sd(iris$Sepal.Length,na.rm = TRUE)
filtro <- (iris$Species=='setosa')
iris$Species[filtro]
iris$Sepal.Length[filtro]
sd(iris$Sepal.Length[filtro],na.rm = TRUE)
summary(factor(iris$Species))
summary(factor(iris))
summary(factor(iris$Species[filtro]))
sd(iris$Sepal.Length[filtro],na.rm = TRUE)
apply(iris,4,sd)
apply(iris,2,sd)
apply(iris$Species[filtro],2,sd)
apply(iris,2,sd)
sapply(iris[c('Sepal.length','Sepal.width','Petal.Lenght','Petal.width')],sd)
sapply(iris[c('Sepal.Length','Sepal.Width','Petal.Lenght','Petal.Width')],sd)
sapply(iris[c('Sepal.Length','Sepal.Width','Petal.Lenght','Petal.Width')], sd)
sd(iris$Petal.Width[filtro],na.rm = TRUE)filtro <- (iris$Species=='setosa')
sd(iris$Petal.Width[filtro],na.rm = TRUE)
sd(iris$Petal.Width,na.rm = TRUE)
iris$lat_sd <- ave(iris$Sepal.Length, iris$Sepal.Width,iris$Petal.Width, FUN=sd)
print(iris$lat_sd)
sd(iris$Petal.Width[filtro],na.rm = TRUE)
sd(iris$Petal.Width,na.rm = TRUE)
sd(iris$Petal.Width[filtro],na.rm = TRUE)
sd(iris$Petal.Width[filtro1],na.rm = TRUE)
sd(iris$Petal.Width[filtro2],na.rm = TRUE)
filtro1 <- (iris$Species=='versicolor')
filtro2 <- (iris$Species=='virginica')
filtro <- (iris$Species=='setosa')
sd(iris$Petal.Width[filtro],na.rm = TRUE)
sd(iris$Petal.Width[filtro1],na.rm = TRUE)
sd(iris$Petal.Width[filtro2],na.rm = TRUE)
install.packages("dplyr")
library("dplyr")
library("dplyr")
summary(maraton)
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,#Nombre de las columnas
row.names = 1, #Las filas tienen un nombre
sep = ",",
dec = ".")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,#Nombre de las columnas
row.names = 1, #Las filas tienen un nombre
sep = ",",
dec = ".")
View(maraton)
glimpse(maraton)
summary(maraton)
head(maraton)
install.packages("RWeka")
install.packages("RWeka")
library("RWeka")
library("RWeka")
datos <- read.arff("CEE_DATA.arff")
datos
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mpg)]
mgpDesc <- mtcars[order(mtcars$mpg),]
print(mgpDesc)
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mtcars
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = FALSE),]
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mpg),]
mgpDesc <- mtcars[order(mtcars$mpg,decreasing = T),]
print(mgpDesc)
mgpDesc <- mtcars[order(mtcars$mpg,decreasing = T),]
print(mgpDesc)
print(temp)
animales <-c('perro','gato','mono','perro','gato')
factor(animales)
summary(factor(animales))
colnames(mtcars)
rownames(mtcars)
summary(mtcars$cyl)
summary(factor(mtcars$cyl[mtcars$cyl == 4 ||mtcars$cyl== 6 ])
mtcars
mtcars
mtcars$cyl[mtcars$cyl == 4 ||mtcars$cyl== 6]
cilindros <- c(4,6)
subset(mtcars$cyl,subset = mtcars$cyl == 4 || mtcars$cyl == 6 )
subset(mtcars$cyl,subset = mtcars$cyl == 4  )
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 6)
sum(subset(mtcars,subset = mtcars$cyl == 6))
subset(mtcars,subset = mtcars$cyl == 6)
subset(mtcars,subset = mtcars$cyl == 6)
sum(mtcars$cyl == 4 )
sum(ntcars$cyl == 6)
sum(mtcars$cyl == 6)
sum(mtcars$cyl == 4 )
subset(mtcars, mtcars$cyl == 6)
subset(mtcars, mtcars$cyl,6)
filtro<-(mtcars$mpg < 20.00)
menormgp <- mtcars$mpg[filtro]
print(menormgp)
subset(mtcars, cyl ==6 | cyl == 6)
subset(mtcars, cyl == 4 | cyl == 6)
str(iris)
nrow(iris['Species'])
factor(iris)
factor(animales)
summary(factor(animales))
summary(subset(mtcars, cyl == 4 | cyl == 6))
summary(factor(subset(mtcars, cyl == 4 | cyl == 6)))
lCoche <- subset(mtcars, cyl == 4 | cyl == 6)
lCoche <- rownames(subset(mtcars, cyl == 4 | cyl == 6))
summary(factor(lCoche))
rownames(subset(mtcars, cyl == 4 | cyl == 6))
colnames(subset(mtcars, cyl == 4 | cyl == 6))
(mtcars$mpg < 20.00)
mtcars$mpg[filtro]
filtro <- (iris$Species=='setosa')
sd(iris$Petal.Width[filtro],na.rm = TRUE)
filtro<-(mtcars$mpg < 20.00)
menormgp <- mtcars$mpg[filtro]
print(menormgp)
lCoche <- colnames(subset(mtcars, cyl == 4 | cyl == 6))
summary(factor(lCoche))
lCoche <- rownames(subset(mtcars, cyl == 4 | cyl == 6))
summary(factor(lCoche))
animales <-c('perro','gato','mono','perro','gato')
summary(factor(animales))
subset(mtcars, cyl == 4 | cyl == 6)
summary(factor(iris$Species))
summary(factor(subset(mtcars, cyl == 4 | cyl == 6)$cyl))
sum(mtcars$cyl == 4 )
sum(mtcars$cyl == 6)
mtcars
subset(mtcars, cyl == 4 | cyl == 6)
summary(factor(subset(mtcars, cyl == 4 | cyl == 6)$cyl))
nrow(subset(mtcars, cyl == 4 | cyl == 6)$cyl))
nrow(subset(mtcars, cyl == 4 | cyl == 6)$cyl)
nrow(subset(mtcars, cyl == 4 | cyl == 6))
subset(mtcars,mgp < 20)
subset(mtcars,mpg < 20)
menormgp <- subset(mtcars,mpg < 20)
print(menormgp)
rm(list = ls())
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular la suma")
sumaTotal = mean(total)
print("Calcular la suma")
sumaTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
media = prod(calificaciones)
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)^(1/length(calificaciones))
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = ((b*a)/2)*h,
prismaRectangular = 2,
prismaTriangular = 3,
}
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = ((b*a)/2)*h,
prismaRectangular = 2,
prismaTriangular = 3,
)
}
calcularVolumen(3,5,15, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = ((b*a)/2)*h,
prismaRectangular = b*a*h,
prismaTriangular = 3,
)
}
calcularVolumen(3,5,15, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = ,
prismaRectangular = b*a*h,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = ,
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = b*(a^2),
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,5, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
#Parte 1. Calculcar el promedio, suma y la media geometrica de las calificaciones
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)^(1/length(calificaciones))
#Parte 2. Calcular los volumenes de las siguientes figuras
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = b*(a^2),
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,5, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
#Parte 1. Calculcar el promedio, suma y la media geometrica de las calificaciones
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)^(1/length(calificaciones))
#Parte 2. Calcular los volumenes de las siguientes figuras
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = b*(a^2),
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,5, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = (b*(a^2))*h,
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,5, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
#Parte 1. Calculcar el promedio, suma y la media geometrica de las calificaciones
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)^(1/length(calificaciones))
#Parte 2. Calcular los volumenes de las siguientes figuras
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = (b*(a^2))*h,
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,5, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = (b*(a^2))*h,
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,6, "cilindro")
#Leer archivos
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,#Nombre de las columnas
row.names = 1, #Las filas tienen un nombre
sep = ",",
dec = ".")
View(maraton)
#Leer archivos
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,#Nombre de las columnas
row.names = 1, #Las filas tienen un nombre
sep = ",",
dec = ".")
View(maraton)
c <- character(10)
5%%2
10%/%7
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
??graph
fun1 <- function(x, aritmetic=T){
if(is.character(x) | is.logical(x)){
print("El argumento no es numerico")
}else{
if(aritmetic == T){
sum(x) / length(x)
}else{
prod(x) ^ (1 / length(x))
}
}
return ("Cualquier cosa")
}
fun1(c(1,2,3), T)
d <- 1:5
d
e <- seq(1,5, by=1.5)
e
g <- scan()
g <- scan()
g <- scan()
names(vector) <- c("Posicion1" ,"Posicion2", "Posicion3")
vector <- c(1,2,3,4)
names(vector) <- c("Posicion1" ,"Posicion2", "Posicion3")
names
vector
inventario <- c('manzana'=30, 'perro'=3)
inventario
inventario2 <- c(inventario, 'pera'=10)
inventario2
vector1 <- 1:10;
colSum(vector1)
colsum(vector1)
sRow(vector1)
sum(vector1)
matriz <- matrix(1:6,nrow = 3,ncol=2);
nRow(matriz)
rowSums(matriz)
cbind(matriz,rowSums(matriz))
row(matriz)
prod(matriz)
rbind(matriz,prod(matriz))
matriz <- cbind(matriz,rowSums(matriz))
rbind(matriz,prod(matriz))
prod(matriz[,])
cbind(matriz,rowSums(matriz))
cbind(matriz,rowSums(matriz))
cbind(matriz,rowSums(matriz))
cbind(matriz,rowSums(matriz))
cbind(matriz,rowSums(matriz))
cbind(matriz,rowSums(matriz))
cbind(matriz,rowSums(matriz))
cbind(matriz,rowSums(matriz))
cbind(matriz,rowSums(matriz))
prod(row(matriz))
rm(list = ls())
matriz <- matrix(1:6,nrow = 3,ncol=2);
matriz
cbind(matriz,rowSums(matriz))
matriz[,1]
prodMatriz <- c(prod(matriz[,1]),prod(matriz[,2]),prod(matriz[,3]))
prod(matriz[,1])
prod(matriz[,2])
prod(matriz[,3])
prod(matriz[,0])
prod(matriz[,1])
mariz <- cbind(matriz,rowSums(matriz))
rm(list = ls())
matriz <- matrix(1:6,nrow = 3,ncol=2);
matriz
matriz <- cbind(matriz,rowSums(matriz))
matriz
prod(matriz[,3])
prodMatriz <- c(prod(matriz[,1]),prod(matriz[,2]),prod(matriz[,3]))
rbind(matriz,prodMatriz)
data <- data.frame(personas,edad)
personas <- c("Jorge","Brenda","Kelly","Sergio","Laura")
edad <- c(21,26,29,40,55)
data <- data.frame(personas,edad)
data
ciudad <- c("Cuernava","Yecapixtla","Tepoztlan","Cuentepec","Tequesquitengo")
data <- cbind(ciudad)
data
data <- data.frame(personas,edad)
data <- data.frame(data,ciudad)
data
data[data$edad>30]
subset(data,edad>30)
subset(data$personas,edad>30)
subset(data$personas,data$edad,edad>30)
subset(data[,2],edad>30)
subset(data[2,2],edad>30)
data
subset(data,edad>30)
alumno <- c("Andres", "Marcela", "Peter", "Ana", "Luis")
materia <- c("Matemáticas", "Historia", "Ciencias", "Inglés", "Geografía")
calificacion <- c(90, 85, 95, 80, 92)
grupo <- data.frame(alumno,materia,calificacion)
grupo
grupo.m90 <- subset(grupo,calificacion>90)
grupo.m90
grupo.m90 <- subset(grupo$alumno,calificacion>90)
grupo.m90
order(data,decreasing = T)
order(grupo$calificacion,decreasing = T)
order(grupo[grupo$calificacion],decreasing = T)
order(grupo$calificacion,decreasing = T)
grupo
order(grupo$calificacion,decreasing = T)
grupo$calificacion
grupo[order(grupo$calificacion,decreasing = T),]
data[data$edad>30]
data[,data$edad>30]
data[,]
filtro <- data$edad>30
subset(data,filtro)
sum(vector1)
vector1 <- 1:10;
sum(vector1)
matriz <- matrix(1:6,nrow = 3,ncol=2);
matriz <- cbind(matriz,rowSums(matriz))
prodMatriz <- c(prod(matriz[,1]),prod(matriz[,2]),prod(matriz[,3]))
rbind(matriz,prodMatriz)
personas <- c("Jorge","Brenda","Kelly","Sergio","Laura")
edad <- c(21,26,29,40,55)
data <- data.frame(personas,edad)
ciudad <- c("Cuernava","Yecapixtla","Tepoztlan","Cuentepec","Tequesquitengo")
data <- data.frame(data,ciudad)
filtro <- data$edad>30
subset(data,filtro)
alumno <- c("Andres", "Marcela", "Peter", "Ana", "Luis")
materia <- c("Matemáticas", "Historia", "Ciencias", "Inglés", "Geografía")
calificacion <- c(90, 85, 95, 80, 92)
grupo <- data.frame(alumno,materia,calificacion)
grupo.m90 <- subset(grupo$alumno,calificacion>90)
grupo.m90
grupo[order(grupo$calificacion,decreasing = T),]
