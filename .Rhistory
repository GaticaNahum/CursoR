maraton <- read.csv("maraton_ny.csv",
header = TRUE,#Nombre de las columnas
row.names = 1, #Las filas tienen un nombre
sep = ",",
dec = ".")
maraton
View(maraton)
class(maraton)
dim(maraton)
names(maraton)
str(maraton)
install.packages("dplyr")
rm(ls = list())
rm(list = ls())
iris
data()
Titanic
meses <- c('enero','febrero','marzo')
ventaS <- C(120,100,80)
objetivos <- c(TRUE,FALSE,TRUE)
datos <- data.frame(meses,ventas,objetivos)
print(datos)
objetivos <- c(TRUE,FALSE,TRUE)
datos <- data.frame(meses,ventas,objetivos)
ventaS <- C(120,100,80)
ventaS <- C(120,100,80)
ventaS <- C(120,100,80)
ventaS <- C(120,100,80)
ventaS <- C(120,100,80)
ventaS <- c(120,100,80)
datos <- data.frame(meses,ventas,objetivos)
meses <- c('enero','febrero','marzo')
rm(list = ls())
meses <- c('enero','febrero','marzo')
ventaS <- c(120,100,80)
objetivos <- c(TRUE,FALSE,TRUE)
datos <- data.frame(meses,ventas,objetivos)
rm(list = ls())
meses <- c('enero','febrero','marzo')
ventas <- c(120,100,80)
objetivos <- c(TRUE,FALSE,TRUE)
datos <- data.frame(meses,ventas,objetivos)
print(datos)
str(datos)
summary(datos)
AirPassengers
head(AirPassengers)
tail(AirPassengers)
datos[0]
datos[1]
datos[,1]
datos[1,'ventas']
datos[2,'objetivo']
datos[1,c('meses','objetivos')]
datos[,c('meses','objetivos')]
subset(datoa,subset = ventas <= 100)
subset(datoa,subset = ventas <= 100)
subset(datos,subset = ventas <= 100)
orden <- order(datos['ventas'])
datos[orden,]
orden.de <- order(-datos['ventas',])
orden.de <- order(-datos['ventas'])
datos[orden.de]
datos[1,'ventas']
datos$ventas
numeros <- 1:10
letras <- letters[1:10]
data <- data.frame(col1 = numeros, col2 = letras)
print(dta)
print(data)
data <- data.frame(col1 = numeros, col2 = letras)
print(data)
write.csv(
data,file = 'data.csv'
)
datos2 <- read.csv()
datos2 <- read.csv('data.csv')
print(datos2)
datos2$X <- null
datos2$X <- NULL
print(datos2)
datos1 <- data.frame(numeros,letras)
print(datos1)
datos2 <- data.frame(numeros = 11, letras = 'k')
PRINT(datos2)
print(datos2)
datos3 <- rbind(datos1,datos2)
print(datos3)
datos3 $ multiplicacion <- datos3$numeros*2
print(datos3)
colnames(datos3)
colnames(datos3) <- c('c1','c2','c3')
print(datos3)
colnames(datos3)[3] <- 'Nuevo'
print(datos3)
datos3[datos3$c1 > 6]
datos3[datos$c1 > 6]
datos3[datos3$c1 > 6]
datos3[datos3$c1>6,]
rm(list = ls())
personas <- c('Antonio','Maria','Juan')
edad <- c(40,30,35)
sexo <- c('M,'F','M')
sexo <- c('M','F','M')
infoPersonas <- data.frame(personas,edad,sexo)
print(infoPersonas)
meses <- c('enero','febrero','marzo')
ventas <- c(120,100,80)
objetivos <- c(TRUE,FALSE,TRUE)
datos <- data.frame(meses,ventas,objetivos)
subset(datos,subset = ventas <= 100)
factor(iris)
summary(factor(iris))
summary(factor(iris$Species))
summary(iris)
summary(sd(iris$Species = 'setosa'))
factor(sd(iris$Species = 'setosa'))
sd(iris$Species = 'setosa')
sd(iris$Sepal.Length)
sd(iris$Sepal.Length,iris$Species=''setosa)
sd(iris$Sepal.Length,iris$Species='setosa')
sd(iris$Sepal.Length,iris$Species='setosa')
sd(iris$Sepal.Length,iris$Species='setosa')
sd(iris$Sepal.Length,iris$Species='setosa')
sd(iris$Sepal.Length,iris$Species=='setosa')
sd(iris$Sepal.Length,iris$Species=='setosa')
sd(iris$Sepal.Length,iris$Species=='setosa')
sd(iris$Sepal.Length,iris$Species=='setosa')
sd(iris$Sepal.Length,na.rm = TRUE)
filtro <- (iris$Species=='setosa')
iris$Species[filtro]
iris$Sepal.Length[filtro]
sd(iris$Sepal.Length[filtro],na.rm = TRUE)
summary(factor(iris$Species))
summary(factor(iris))
summary(factor(iris$Species[filtro]))
sd(iris$Sepal.Length[filtro],na.rm = TRUE)
apply(iris,4,sd)
apply(iris,2,sd)
apply(iris$Species[filtro],2,sd)
apply(iris,2,sd)
sapply(iris[c('Sepal.length','Sepal.width','Petal.Lenght','Petal.width')],sd)
sapply(iris[c('Sepal.Length','Sepal.Width','Petal.Lenght','Petal.Width')],sd)
sapply(iris[c('Sepal.Length','Sepal.Width','Petal.Lenght','Petal.Width')], sd)
sd(iris$Petal.Width[filtro],na.rm = TRUE)filtro <- (iris$Species=='setosa')
sd(iris$Petal.Width[filtro],na.rm = TRUE)
sd(iris$Petal.Width,na.rm = TRUE)
iris$lat_sd <- ave(iris$Sepal.Length, iris$Sepal.Width,iris$Petal.Width, FUN=sd)
print(iris$lat_sd)
sd(iris$Petal.Width[filtro],na.rm = TRUE)
sd(iris$Petal.Width,na.rm = TRUE)
sd(iris$Petal.Width[filtro],na.rm = TRUE)
sd(iris$Petal.Width[filtro1],na.rm = TRUE)
sd(iris$Petal.Width[filtro2],na.rm = TRUE)
filtro1 <- (iris$Species=='versicolor')
filtro2 <- (iris$Species=='virginica')
filtro <- (iris$Species=='setosa')
sd(iris$Petal.Width[filtro],na.rm = TRUE)
sd(iris$Petal.Width[filtro1],na.rm = TRUE)
sd(iris$Petal.Width[filtro2],na.rm = TRUE)
install.packages("dplyr")
library("dplyr")
library("dplyr")
summary(maraton)
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,#Nombre de las columnas
row.names = 1, #Las filas tienen un nombre
sep = ",",
dec = ".")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,#Nombre de las columnas
row.names = 1, #Las filas tienen un nombre
sep = ",",
dec = ".")
View(maraton)
glimpse(maraton)
summary(maraton)
head(maraton)
install.packages("RWeka")
install.packages("RWeka")
library("RWeka")
library("RWeka")
datos <- read.arff("CEE_DATA.arff")
datos
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mpg)]
mgpDesc <- mtcars[order(mtcars$mpg),]
print(mgpDesc)
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = TRUE),]
mtcars
mgpDesc <- mtcars[order(mtcars$mgp,decreasing = FALSE),]
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mgp),]
mgpDesc <- mtcars[order(mtcars$mpg),]
mgpDesc <- mtcars[order(mtcars$mpg,decreasing = T),]
print(mgpDesc)
mgpDesc <- mtcars[order(mtcars$mpg,decreasing = T),]
print(mgpDesc)
print(temp)
animales <-c('perro','gato','mono','perro','gato')
factor(animales)
summary(factor(animales))
colnames(mtcars)
rownames(mtcars)
summary(mtcars$cyl)
summary(factor(mtcars$cyl[mtcars$cyl == 4 ||mtcars$cyl== 6 ])
mtcars
mtcars
mtcars$cyl[mtcars$cyl == 4 ||mtcars$cyl== 6]
cilindros <- c(4,6)
subset(mtcars$cyl,subset = mtcars$cyl == 4 || mtcars$cyl == 6 )
subset(mtcars$cyl,subset = mtcars$cyl == 4  )
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 4)
subset(mtcars,subset = mtcars$cyl == 6)
sum(subset(mtcars,subset = mtcars$cyl == 6))
subset(mtcars,subset = mtcars$cyl == 6)
subset(mtcars,subset = mtcars$cyl == 6)
sum(mtcars$cyl == 4 )
sum(ntcars$cyl == 6)
sum(mtcars$cyl == 6)
sum(mtcars$cyl == 4 )
subset(mtcars, mtcars$cyl == 6)
subset(mtcars, mtcars$cyl,6)
filtro<-(mtcars$mpg < 20.00)
menormgp <- mtcars$mpg[filtro]
print(menormgp)
subset(mtcars, cyl ==6 | cyl == 6)
subset(mtcars, cyl == 4 | cyl == 6)
str(iris)
nrow(iris['Species'])
factor(iris)
factor(animales)
summary(factor(animales))
summary(subset(mtcars, cyl == 4 | cyl == 6))
summary(factor(subset(mtcars, cyl == 4 | cyl == 6)))
lCoche <- subset(mtcars, cyl == 4 | cyl == 6)
lCoche <- rownames(subset(mtcars, cyl == 4 | cyl == 6))
summary(factor(lCoche))
rownames(subset(mtcars, cyl == 4 | cyl == 6))
colnames(subset(mtcars, cyl == 4 | cyl == 6))
(mtcars$mpg < 20.00)
mtcars$mpg[filtro]
filtro <- (iris$Species=='setosa')
sd(iris$Petal.Width[filtro],na.rm = TRUE)
filtro<-(mtcars$mpg < 20.00)
menormgp <- mtcars$mpg[filtro]
print(menormgp)
lCoche <- colnames(subset(mtcars, cyl == 4 | cyl == 6))
summary(factor(lCoche))
lCoche <- rownames(subset(mtcars, cyl == 4 | cyl == 6))
summary(factor(lCoche))
animales <-c('perro','gato','mono','perro','gato')
summary(factor(animales))
subset(mtcars, cyl == 4 | cyl == 6)
summary(factor(iris$Species))
summary(factor(subset(mtcars, cyl == 4 | cyl == 6)$cyl))
sum(mtcars$cyl == 4 )
sum(mtcars$cyl == 6)
mtcars
subset(mtcars, cyl == 4 | cyl == 6)
summary(factor(subset(mtcars, cyl == 4 | cyl == 6)$cyl))
nrow(subset(mtcars, cyl == 4 | cyl == 6)$cyl))
nrow(subset(mtcars, cyl == 4 | cyl == 6)$cyl)
nrow(subset(mtcars, cyl == 4 | cyl == 6))
subset(mtcars,mgp < 20)
subset(mtcars,mpg < 20)
menormgp <- subset(mtcars,mpg < 20)
print(menormgp)
rm(list = ls())
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular la suma")
sumaTotal = mean(total)
print("Calcular la suma")
sumaTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
media = prod(calificaciones)
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)^(1/length(calificaciones))
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = ((b*a)/2)*h,
prismaRectangular = 2,
prismaTriangular = 3,
}
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = ((b*a)/2)*h,
prismaRectangular = 2,
prismaTriangular = 3,
)
}
calcularVolumen(3,5,15, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = ((b*a)/2)*h,
prismaRectangular = b*a*h,
prismaTriangular = 3,
)
}
calcularVolumen(3,5,15, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = ,
prismaRectangular = b*a*h,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = ,
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = b*(a^2),
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,5, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
#Parte 1. Calculcar el promedio, suma y la media geometrica de las calificaciones
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)^(1/length(calificaciones))
#Parte 2. Calcular los volumenes de las siguientes figuras
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = b*(a^2),
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,5, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
#Parte 1. Calculcar el promedio, suma y la media geometrica de las calificaciones
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)^(1/length(calificaciones))
#Parte 2. Calcular los volumenes de las siguientes figuras
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = b*(a^2),
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,5, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = (b*(a^2))*h,
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,5, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
#Parte 1. Calculcar el promedio, suma y la media geometrica de las calificaciones
calificaciones <- c(9.3,9.6,9.4,9.2,9.1,9.0,9.2)
print("Calcular el promedio")
promedioTotal = mean(calificaciones)
print("Calcular la suma")
sumTotal = sum(calificaciones)
print("Calcular la media geométrica")
mediaGeometrica = prod(calificaciones)^(1/length(calificaciones))
#Parte 2. Calcular los volumenes de las siguientes figuras
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = (b*(a^2))*h,
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,5, "cilindro")
calcularVolumen(5,4,1, "prismaRectangular")
calcularVolumen(3,5,15, "prismaTriangular")
pi = 3.1416
calcularVolumen <- function( b, a, h, type){
switch(type,
cilindro = (b*(a^2))*h,
prismaRectangular = b*a,
prismaTriangular = ((b*a)/2)*h,
)
}
calcularVolumen(pi,5,6, "cilindro")
#Leer archivos
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,#Nombre de las columnas
row.names = 1, #Las filas tienen un nombre
sep = ",",
dec = ".")
View(maraton)
#Leer archivos
setwd("C:\\Users\\CC7\\Downloads")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,#Nombre de las columnas
row.names = 1, #Las filas tienen un nombre
sep = ",",
dec = ".")
View(maraton)
c <- character(10)
5%%2
10%/%7
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
??graph
fun1 <- function(x, aritmetic=T){
if(is.character(x) | is.logical(x)){
print("El argumento no es numerico")
}else{
if(aritmetic == T){
sum(x) / length(x)
}else{
prod(x) ^ (1 / length(x))
}
}
return ("Cualquier cosa")
}
fun1(c(1,2,3), T)
d <- 1:5
d
e <- seq(1,5, by=1.5)
e
g <- scan()
g <- scan()
g <- scan()
names(vector) <- c("Posicion1" ,"Posicion2", "Posicion3")
vector <- c(1,2,3,4)
names(vector) <- c("Posicion1" ,"Posicion2", "Posicion3")
names
vector
inventario <- c('manzana'=30, 'perro'=3)
inventario
inventario2 <- c(inventario, 'pera'=10)
inventario2
